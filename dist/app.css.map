{"version":3,"sources":["webpack:///src/Display.vue","webpack:///src/App.vue"],"names":[],"mappings":";AAqGA;CACA;AACA;AACA;CACA;AACA;;;AC9BA;CACA;CACA;AACA","file":"app.css","sourcesContent":["<template>\r\n\t<div>\r\n\t\t<canvas id='array-display'></canvas>\r\n\t\t<div>\r\n\t\t\t<button @click='first' :disabled='isDisabled()'><img src='assets/images/first.png'></button>\r\n\t\t\t<button @click='previous' :disabled='isDisabled()'><img src='assets/images/previous.png'></button>\r\n\t\t\t<button id='play' @click='play'>\r\n\t\t\t\t<img src='assets/images/play.png' v-if=\"this.$store.state.mainBtn == 0\">\r\n\t\t\t\t<img src='assets/images/pause.png' v-else-if=\"this.$store.state.mainBtn == 1\">\r\n\t\t\t\t<img src='assets/images/restart.png' v-else>\r\n\t\t\t</button>\r\n\t\t\t<button @click='next' :disabled='isDisabled()'><img src='assets/images/next.png'></button>\r\n\t\t\t<button @click='last' :disabled='isDisabled()'><img src='assets/images/last.png'></button>\r\n\t\t</div>\r\n\t\t<div class='row'>\r\n\t\t\t<input id='fps' @input=\"setFps\" type=\"range\" min=\"1\" max=\"60\" value=\"60\" class=\"slider\"><p>Fps: {{ $store.state.fps }}</p>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { mapActions } from 'vuex'\r\n\timport { bubbleSort } from './algorithms.js'\r\n\timport { start, stop, setStore, step } from './timeStep.js'\r\n\t\r\n\texport default {\r\n\t\tmethods: {\r\n\t\t\tfirst() {\r\n\t\t\t\tif (!this.$store.state.sequence) {\r\n\t\t\t\t\tthis.$store.commit('setSequence', this.$store.state.sort(this.$store.state.array))\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstep(-99999)\r\n\t\t\t\tthis.$store.commit('mainBtn', 0)\r\n\t\t\t},\r\n\t\t\tprevious() {\r\n\t\t\t\tif (!this.$store.state.sequence) {\r\n\t\t\t\t\tthis.$store.commit('setSequence', this.$store.state.sort(this.$store.state.array))\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstep(-1)\r\n\t\t\t\tthis.$store.commit('mainBtn', 0)\r\n\t\t\t},\r\n\t\t\tplay() {\r\n\t\t\t\tif (this.$store.state.mainBtn == 1) {\r\n\t\t\t\t\tstop()\r\n\t\t\t\t\t// e.firstChild.src = 'assets/images/play.png'\r\n\t\t\t\t} else if (this.$store.state.mainBtn == 0) {\r\n\t\t\t\t\tif (!this.$store.state.sequence) {\r\n\t\t\t\t\t\tthis.$store.commit('setSequence', this.$store.state.sort(this.$store.state.array))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tstart()\r\n\t\t\t\t\t// e.firstChild.src = 'assets/images/pause.png'\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!this.$store.state.sequence) {\r\n\t\t\t\t\t\tthis.$store.commit('setSequence', this.$store.state.sort(this.$store.state.array))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tstep(-99999)\r\n\t\t\t\t\tstart()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tnext() {\r\n\t\t\t\tif (!this.$store.state.sequence) {\r\n\t\t\t\t\tthis.$store.commit('setSequence', this.$store.state.sort(this.$store.state.array))\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstep(1)\r\n\t\t\t\t\r\n\t\t\t\tif (this.$store.state.sequence.index == this.$store.state.sequence.length - 1) {\r\n\t\t\t\t\tthis.$store.commit('mainBtn', 2)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tlast() {\r\n\t\t\t\tif (!this.$store.state.sequence) {\r\n\t\t\t\t\tthis.$store.commit('setSequence', this.$store.state.sort(this.$store.state.array))\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstep(99999)\r\n\t\t\t\tthis.$store.commit('mainBtn', 2)\r\n\t\t\t},\r\n\t\t\tsetFps() {\r\n\t\t\t\tthis.$store.commit('setFps', document.querySelector('#fps').value)\r\n\t\t\t},\r\n\t\t\tisDisabled() {\r\n\t\t\t\treturn this.$store.state.mainBtn == 1\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis.$nextTick(function () {\r\n\t\t\t\tthis.$store.dispatch('setCanvas', document.querySelector('#array-display'))\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tsetStore(this.$store)\r\n\t\t\twindow.display = this\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t#array-display {\r\n\t\twidth: 100%;\r\n\t}\r\n\tbutton:disabled {\r\n\t\tbackground-color: black;\r\n\t}\r\n</style>\r\n","<template>\r\n\t<div>\r\n\t\t<Navbar></Navbar>\r\n\t\t<div class='container'>\r\n\t\t\t<div class='row'>\r\n\t\t\t\t<input id='input' type='text'><button @click='readInput'>Enter</button>\r\n\t\t\t</div>\r\n\t\t\t<div class='row'>\r\n\t\t\t\t<input id='length' @input=\"setLength\" type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\"><p>Length: {{ length }}</p>\r\n\t\t\t\t<input id='max' @input=\"setMax\" type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\"><p>Max: {{ max }}<span id='max-display'></span></p>\r\n\t\t\t\t<button @click='randomArray'>Create Array</button>\r\n\t\t\t</div>\r\n\t\t\t<br>\r\n\t\t\t<Display></Display>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport { mapActions } from 'vuex'\r\n\timport Navbar from './Navbar.vue'\r\n\timport Display from './Display.vue'\r\n\t\r\n\texport default {\r\n\t\tcomponents: {\r\n\t\t\tNavbar,\r\n\t\t\tDisplay\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tlength: 1,\r\n\t\t\t\tmax: 1\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\treadInput() {\r\n\t\t\t\tthis.$store.dispatch('setArray', document.querySelector('#input').value.split(',').map(x => Number(x)))\r\n\t\t\t\tthis.$store.commit('setSequence', null)\r\n\t\t\t},\r\n\t\t\tsetLength() {\r\n\t\t\t\tthis.length = document.querySelector('#length').value * 1\r\n\t\t\t},\r\n\t\t\tsetMax() {\r\n\t\t\t\tthis.max = document.querySelector('#max').value * 1\r\n\t\t\t},\r\n\t\t\tsetSort(name) {\r\n\t\t\t\tthis.$store.commit('setSort', name)\r\n\t\t\t\tthis.$store.commit('setSequence', null)\r\n\t\t\t},\r\n\t\t\trandomArray() {\r\n\t\t\t\tconst arr = new Array(this.length).fill(1)\r\n\t\t\t\t\r\n\t\t\t\tfor (let i in arr) {\r\n\t\t\t\t\tarr[i] = Math.ceil(Math.random() * this.max)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.$store.commit('mainBtn', 0)\r\n\t\t\t\tthis.$store.dispatch('setArray', arr)\r\n\t\t\t\tthis.$store.commit('setSequence', null)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted: function () {\r\n\t\t\tthis.$nextTick(function () {\r\n\t\t\t\t// Code that will run only after the\r\n\t\t\t\t// entire view has been rendered\r\n\t\t\t\tdocument.querySelector('#input').value = '9, 8, 7, 6, 5, 4, 3, 2, 1, 0'\r\n\t\t\t\tthis.readInput()\r\n\t\t\t\t\r\n\t\t\t\tthis.setLength()\r\n\t\t\t\tthis.setMax()\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\tbody {\r\n\t\tbackground-color: var(--gray);\r\n\t\tfont-family: Arial, sans-serif;\r\n\t}\r\n</style>\r\n"],"sourceRoot":""}